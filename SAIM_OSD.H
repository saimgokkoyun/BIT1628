#ifndef SAIM_OSD_H_
#define SAIM_OSD_H_


#include "common.h"


uint8_t Register_0[] = {
  /*     00 ,  01 ,  02 ,  03 ,  04 ,  05 ,  06 ,  07 ,  08 ,  09 ,  0A ,  0B ,  0C ,  0D ,  0E ,  0F , */
/*00*/        0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x0F, 0x20, 0x05, 0x52, 0x80, 0xEC, 0x8F, 0xAC,
/*01*/  0x04, 0x09, 0xE9, 0x10, 0x66, 0x33, 0x22, 0x06, 0x09, 0x19, 0x22, 0x45, 0x00, 0x10, 0x00, 0x00,
/*02*/  0x24, 0x04, 0x25, 0x29, 0x00, 0x01, 0x37, 0x00, 0x27, 0x45, 0x00, 0x14, 0x55, 0x00, 0x00, 0x09,
/*03*/  0x0A, 0x80, 0x00, 0x00, 0xC0, 0x00, 0x17, 0x00, 0x00, 0x3F, 0x3F, 0x8F, 0xCF, 0x09, 0xAC, 0x51,
/*04*/  0x30, 0x17, 0x37, 0x10, 0x9D, 0x53, 0x30, 0x18, 0x03, 0x10, 0x00, 0x58, 0x88, 0x42, 0x13, 0x20,
/*05*/  0x80, 0x23, 0x06, 0xE9, 0x10, 0x07, 0xE9, 0x10, 0x08, 0x1E, 0x01, 0x20, 0x00, 0x03, 0x00, 0x60,
/*06*/  0x00, 0x01, 0x03, 0x88, 0xC8, 0x00, 0x05, 0x03, 0x6C, 0xFF, 0x30, 0x68, 0x6C, 0xF1, 0x30, 0x6C,
/*07*/  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x04, 0x00, 0x10, 0x03, 0x2A, 0xB6, 0xD8, 0x00,
/*08*/  0x00, 0x03, 0x17, 0x00, 0xE2, 0x00, 0x14, 0xA9, 0xFC, 0x01, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
/*09*/  0xD7, 0x93, 0x31, 0x82, 0x83, 0x98, 0x00, 0x20, 0x80, 0x80, 0x80, 0x50, 0x00, 0x43, 0x51, 0x04,
/*0A*/  0xBA, 0x34, 0x00, 0xC5, 0xCF, 0x57, 0xAB, 0xAB, 0xFA, 0x04, 0x45, 0xD2, 0x91, 0x98, 0x03, 0xB2,
/*0B*/  0x00, 0x06, 0xFF, 0x0D, 0x0D, 0xEF, 0x80, 0xA0, 0x41, 0x19, 0xC1, 0x80, 0xF8, 0x08, 0x00, 0xB1,
/*0C*/  0x52, 0x25, 0xFE, 0x80, 0x40, 0x32, 0x00, 0x08, 0x00, 0x00, 0x3D, 0x2F, 0x0F, 0x8C, 0x80, 0x83,
/*0D*/  0x54, 0x86, 0x2B, 0x1C, 0x00, 0x11, 0x9A, 0x85, 0x9A, 0x85, 0x63, 0xA4, 0x18, 0x00, 0x00, 0x00,
/*0E*/  0x53, 0xA8, 0x81, 0x8C, 0x52, 0x25, 0xBF, 0x80, 0x00, 0x0C, 0x3F, 0x8E, 0x00, 0x00, 0x47, 0x00,
/*0F*/  0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x12, 0x04, 0x00, 0x01
};

uint8_t Register_1[] = {
  /*     00 ,  01 ,  02 ,  03 ,  04 ,  05 ,  06 ,  07 ,  08 ,  09 ,  0A ,  0B ,  0C ,  0D ,  0E ,  0F , */
/*00*/        0x23, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x04, 0x00, 0x00, 0x00, 0x00,
/*01*/  0xD4, 0x0A, 0x00, 0x00, 0x0F, 0x07, 0x11, 0x22, 0x00, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
/*02*/  0x55, 0xE2, 0x0A, 0x00, 0x17, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x7F, 0x00,
/*03*/  0x08, 0x05, 0x13, 0x86, 0x01, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
/*04*/  0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0xC6, 0x10,
/*05*/  0x18, 0x00, 0x0C, 0x00, 0x32, 0x00, 0x01, 0x0E, 0x00, 0x03, 0x50, 0x01, 0x0C, 0x00, 0x00, 0x00,
/*06*/  0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x80, 0x00,
/*07*/  0x00, 0x02, 0x48, 0x00, 0x7B, 0x19, 0x00, 0x00, 0x0A, 0x0D, 0x35, 0x09, 0x0A, 0x41, 0x0D, 0x00,
/*08*/  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6C, 0xA5, 0x71, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x60,
/*09*/  0x00, 0x01, 0x01, 0x02, 0x03, 0x03, 0x04, 0x05, 0x05, 0x06, 0x00, 0x18, 0x00, 0x00, 0x71, 0x09,
/*0A*/  0x47, 0x5F, 0x06, 0x39, 0x31, 0x79, 0xDF, 0x26, 0x5B, 0x44, 0x10, 0x54, 0x82, 0xC2, 0x00, 0x0F,
/*0B*/  0x28, 0x28, 0xF0, 0x0E, 0xFC, 0x0A, 0xFC, 0x08, 0xFC, 0xFF, 0xEC, 0xB7, 0x67, 0x40, 0x09, 0x01,
/*0C*/  0x78, 0x00, 0x00, 0x00, 0x00, 0x01, 0x3F, 0x35, 0x33, 0x38, 0x45, 0x00, 0xFF, 0x00, 0x03, 0x00,
/*0D*/  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xFC, 0x00, 0x13, 0x12, 0x00, 0x71, 0x80, 0x81, 0x14,
/*0E*/  0x00, 0x1B, 0x70, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xFF, 0x00, 0x80, 0x00, 0x00, 0x00,
/*0F*/  0x89, 0x00, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0x46, 0x89, 0x00, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0x46
};

uint8_t OSD_MSB[] = {
  /*     00 ,  01 ,  02 ,  03 ,  04 ,  05 ,  06 ,  07 ,  08 ,  09 ,  0A ,  0B ,  0C ,  0D ,  0E ,  0F , */
/*00*/        0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
/*01*/  0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
/*02*/  0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
/*03*/  0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16,
/*04*/  0xBF, 0xFC, 0xA0, 0x95, 0xF6, 0x7E, 0xDD, 0x4F, 0xC7, 0x4F, 0xD3, 0x0B, 0x9B, 0x2E, 0x98, 0x91,
/*05*/  0x40, 0x38, 0x80, 0xE5, 0x27, 0xA9, 0xD8, 0xA7, 0x5F, 0xD7, 0x83, 0x6D, 0x9E, 0x96, 0x58, 0xFD,
/*06*/  0xB7, 0x17, 0x97, 0x33, 0x7F, 0xFB, 0xCA, 0xBE, 0x54, 0xC0, 0x5C, 0x42, 0x81, 0x4F, 0x00, 0x46,
/*07*/  0xEB, 0xFE, 0xA5, 0x43, 0x8B, 0xF6, 0x1A, 0xF3, 0x3D, 0xD9, 0xA0, 0xE0, 0x8B, 0x1A, 0xF4, 0xFA,
/*08*/  0x11, 0xAC, 0x45, 0x50, 0xB4, 0xE8, 0x80, 0x98, 0x0F, 0x65, 0xD8, 0x38, 0x09, 0x62, 0xDA, 0x60,
/*09*/  0x24, 0x2B, 0x42, 0x38, 0xE4, 0xFC, 0x43, 0xFF, 0xFC, 0x6E, 0xCE, 0x17, 0x45, 0x7B, 0x2E, 0x89,
/*0A*/  0x53, 0xCE, 0xDE, 0x31, 0x8B, 0x1D, 0x86, 0x7A, 0x9B, 0xF5, 0xD8, 0xB7, 0x43, 0x87, 0x84, 0x61,
/*0B*/  0x03, 0xE2, 0xDE, 0x23, 0x87, 0x3C, 0xA9, 0x7E, 0x06, 0xAF, 0x88, 0xA4, 0x35, 0x2E, 0xFA, 0xD7,
/*0C*/  0xCF, 0x1E, 0x5D, 0x09, 0x42, 0x30, 0x34, 0x3F, 0x43, 0x29, 0xC8, 0x21, 0xD3, 0x3F, 0xC0, 0x32,
/*0D*/  0x58, 0xE9, 0x83, 0x3B, 0x5C, 0x12, 0xCC, 0x13, 0x54, 0x6B, 0xC0, 0x0A, 0xD0, 0x0D, 0xC8, 0x7B,
/*0E*/  0xCA, 0xCB, 0x92, 0x33, 0xD3, 0x8E, 0x4C, 0x2A, 0xD7, 0xEB, 0x50, 0x9F, 0x4B, 0x1C, 0x9B, 0xF1,
/*0F*/  0x10, 0x5A, 0x74, 0x46, 0x0E, 0xAE, 0x54, 0x31, 0xFD, 0x91, 0x03, 0xC2, 0x9A, 0x60, 0x10, 0x03
};

uint8_t OSD_LSB[] = {
  /*     00 ,  01 ,  02 ,  03 ,  04 ,  05 ,  06 ,  07 ,  08 ,  09 ,  0A ,  0B ,  0C ,  0D ,  0E ,  0F , */
/*00*/        0x4E, 0x4F, 0x20, 0x53, 0x49, 0x47, 0x4E, 0x41, 0x4C, 0x20, 0x20, 0x16, 0x16, 0x16, 0x16,
/*01*/  0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16,
/*02*/  0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16,
/*03*/  0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16,
/*04*/  0xBF, 0xFC, 0xA0, 0x95, 0xF6, 0x7E, 0xDD, 0x4F, 0xC7, 0x4F, 0xD3, 0x0B, 0x9B, 0x2E, 0x98, 0x91,
/*05*/  0x40, 0x38, 0x80, 0xE5, 0x27, 0xA9, 0xD8, 0xA7, 0x5F, 0xD7, 0x83, 0x6D, 0x9E, 0x96, 0x58, 0xFD,
/*06*/  0xB7, 0x17, 0x97, 0x33, 0x7F, 0xFB, 0xCA, 0xBE, 0x54, 0xC0, 0x5C, 0x42, 0x81, 0x4F, 0x00, 0x46,
/*07*/  0xEB, 0xFE, 0xA5, 0x43, 0x8B, 0xF6, 0x1A, 0xF3, 0x3D, 0xD9, 0xA0, 0xE0, 0x8B, 0x1A, 0xF4, 0xFA,
/*08*/  0x11, 0xAC, 0x45, 0x50, 0xB4, 0xE8, 0x80, 0x98, 0x0F, 0x65, 0xD8, 0x38, 0x09, 0x62, 0xDA, 0x60,
/*09*/  0x24, 0x2B, 0x42, 0x38, 0xE4, 0xFC, 0x43, 0xFF, 0xFC, 0x6E, 0xCE, 0x17, 0x45, 0x7B, 0x2E, 0x89,
/*0A*/  0x53, 0xCE, 0xDE, 0x31, 0x8B, 0x1D, 0x86, 0x7A, 0x9B, 0xF5, 0xD8, 0xB7, 0x43, 0x87, 0x84, 0x61,
/*0B*/  0x03, 0xE2, 0xDE, 0x23, 0x87, 0x3C, 0xA9, 0x7E, 0x06, 0xAF, 0x88, 0xA4, 0x35, 0x2E, 0xFA, 0xD7,
/*0C*/  0xCF, 0x1E, 0x5D, 0x09, 0x42, 0x30, 0x34, 0x3F, 0x43, 0x29, 0xC8, 0x21, 0xD3, 0x3F, 0xC0, 0x32,
/*0D*/  0x58, 0xE9, 0x83, 0x3B, 0x5C, 0x12, 0xCC, 0x13, 0x54, 0x6B, 0xC0, 0x0A, 0xD0, 0x0D, 0xC8, 0x7B,
/*0E*/  0xCA, 0xCB, 0x92, 0x33, 0xD3, 0x8E, 0x4C, 0x2A, 0xD7, 0xEB, 0x50, 0x9F, 0x4B, 0x1C, 0x9B, 0xF1,
/*0F*/  0x10, 0x5A, 0x74, 0x46, 0x0E, 0xAE, 0x54, 0x31, 0xFD, 0x91, 0x03, 0xC2, 0x9A, 0x60, 0x10, 0x03
};



uint8_t Register0_11_ON[] = {
  /*     00 ,  01 ,  02 ,  03 ,  04 ,  05 ,  06 ,  07 ,  08 ,  09 ,  0A ,  0B ,  0C ,  0D ,  0E ,  0F , */
/*00*/  0xF0, 0x23, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x84
};
uint8_t Register0_11_OFF[] = {
  /*     00 ,  01 ,  02 ,  03 ,  04 ,  05 ,  06 ,  07 ,  08 ,  09 ,  0A ,  0B ,  0C ,  0D ,  0E ,  0F , */
/*00*/  0xF0, 0x23, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x04
};
uint8_t Register1_11[] = {
  /*     00 ,  01 ,  02 ,  03 ,  04 ,  05 ,  06 ,  07 ,  08 ,  09 ,  0A ,  0B ,  0C ,  0D ,  0E ,  0F , */
/*10*/  0xD4, 0x0A, 0x00, 0x00, 0x0F, 0x07, 0x11, 0x22, 0x00, 0x80, 0x00, 0x04
};
uint8_t Register2_11[] = {
  /*     00 ,  01 ,  02 ,  03 ,  04 ,  05 ,  06 ,  07 ,  08 ,  09 ,  0A ,  0B ,  0C ,  0D ,  0E ,  0F , */
/*20*/  0x55, 0xE2, 0x0A, 0x00, 0x17, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04
};
uint8_t Bank05[] = {
  /*     00 ,  01 ,  02 ,  03 ,  04 ,  05 ,  06 ,  07 ,  08 ,  09 ,  0A ,  0B ,  0C ,  0D ,  0E ,  0F , */
/*20*/  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
uint8_t Register_2E_BYTE= 0x7F;



uint8_t Gamma[] = {
  /*     00 ,  01 ,  02 ,  03 ,  04 ,  05 ,  06 ,  07 ,  08 ,  09 ,  0A ,  0B ,  0C ,  0D ,  0E ,  0F , */
/*00*/        0x45, 0xE0, 0x36, 0xF1, 0x2B, 0x56, 0x64, 0xCF, 0x84, 0xDA, 0x30, 0x0B, 0x6D, 0xD0, 0x43,
/*01*/  0xC0, 0xDE, 0x11, 0xF0, 0x96, 0x58, 0x11, 0xA2, 0xBA, 0xDF, 0xC4, 0x97, 0x49, 0xDB, 0x68, 0x3A,
/*02*/  0xD2, 0x23, 0xD9, 0x70, 0x57, 0x6C, 0x12, 0xD0, 0xDC, 0x5E, 0xAC, 0x36, 0xB3, 0x1B, 0xD8, 0x16,
/*03*/  0xFA, 0x2D, 0x42, 0x42, 0x50, 0xB9, 0x93, 0xB3, 0xD0, 0x6F, 0xD4, 0xD0, 0x49, 0x6F, 0x0C, 0x3E,
/*04*/  0xBF, 0xFC, 0xA0, 0x95, 0xF6, 0x7E, 0xDD, 0x4F, 0xC7, 0x4F, 0xD3, 0x0B, 0x9B, 0x2E, 0x98, 0x91,
/*05*/  0x40, 0x38, 0x80, 0xE5, 0x27, 0xA9, 0xD8, 0xA7, 0x5F, 0xD7, 0x83, 0x6D, 0x9E, 0x96, 0x58, 0xFD,
/*06*/  0xB7, 0x17, 0x97, 0x33, 0x7F, 0xFB, 0xCA, 0xBE, 0x54, 0xC0, 0x5C, 0x42, 0x81, 0x4F, 0x00, 0x46,
/*07*/  0xEB, 0xFE, 0xA5, 0x43, 0x8B, 0xF6, 0x1A, 0xF3, 0x3D, 0xD9, 0xA0, 0xE0, 0x8B, 0x1A, 0xF4, 0xFA,
/*08*/  0x11, 0xAC, 0x45, 0x50, 0xB4, 0xE8, 0x80, 0x98, 0x0F, 0x65, 0xD8, 0x38, 0x09, 0x62, 0xDA, 0x60,
/*09*/  0x24, 0x2B, 0x42, 0x38, 0xE4, 0xFC, 0x43, 0xFF, 0xFC, 0x6E, 0xCE, 0x17, 0x45, 0x7B, 0x2E, 0x89,
/*0A*/  0x53, 0xCE, 0xDE, 0x31, 0x8B, 0x1D, 0x86, 0x7A, 0x9B, 0xF5, 0xD8, 0xB7, 0x43, 0x87, 0x84, 0x61,
/*0B*/  0x03, 0xE2, 0xDE, 0x23, 0x87, 0x3C, 0xA9, 0x7E, 0x06, 0xAF, 0x88, 0xA4, 0x35, 0x2E, 0xFA, 0xD7,
/*0C*/  0xCF, 0x1E, 0x5D, 0x09, 0x42, 0x30, 0x34, 0x3F, 0x43, 0x29, 0xC8, 0x21, 0xD3, 0x3F, 0xC0, 0x32,
/*0D*/  0x58, 0xE9, 0x83, 0x3B, 0x5C, 0x12, 0xCC, 0x13, 0x54, 0x6B, 0xC0, 0x0A, 0xD0, 0x0D, 0xC8, 0x7B,
/*0E*/  0xCA, 0xCB, 0x92, 0x33, 0xD3, 0x8E, 0x4C, 0x2A, 0xD7, 0xEB, 0x50, 0x9F, 0x4B, 0x1C, 0x9B, 0xF1,
/*0F*/  0x10, 0x5A, 0x74, 0x46, 0x0E, 0xAE, 0x54, 0x31, 0xFD, 0x91, 0x03, 0xC2, 0x9A, 0x60, 0x10, 0x03
};



uint8_t S_MSB[] = { // Turkcede Sekerin kucuk S harfi
/*00*/  0x00,
/*01*/  0x01,
/*02*/  0x03,
/*03*/  0x07,
/*04*/  0x06,
/*05*/  0x07,
/*06*/  0x03,
/*07*/  0x01,
/*08*/  0x00,
/*09*/  0x00,
/*0A*/  0x06,
/*0B*/  0x07,
/*0C*/  0x03,
/*0D*/  0x01,
/*0E*/  0x00,
/*0F*/  0x01
};


uint8_t S_LSB[] = { // Turkcede Sekerin kucuk S harfi
/*00*/  0x00,
/*01*/  0xF8,
/*02*/  0xFC,
/*03*/  0x0E,
/*04*/  0x06,
/*05*/  0x00,
/*06*/  0xF8,
/*07*/  0xFC,
/*08*/  0x0E,
/*09*/  0x06,
/*0A*/  0x06,
/*0B*/  0x0E,
/*0C*/  0xFC,
/*0D*/  0xF8,
/*0E*/  0x30,
/*0F*/  0xF0
};

#define OSD_SHOW_HEX                OFF
#define OSD_SHOW_PROGRESS_BAR       ON
#define OSD_SHOW_VALUE              ON

/* ::::::::::::::::::::::::::::::::::::
    OSD Configuration
   :::::::::::::::::::::::::::::::::::: */
#define OSD0_OFF                    0x04
#define OSD0_ON                     0x84
#define OSD1_OFF                    0x04
#define OSD1_ON                     0x84
#define OSD2_OFF                    0x04
#define OSD2_ON                     0x84


/* ::::::::::::::::::::::::::::::::::::
    [1]125 OSD Fixed Font
   :::::::::::::::::::::::::::::::::::: */
#define OSD_2C_CHECK_ON             0x2C
#define OSD_3C_CHECK_OFF            0x3C

/* .....................................
    [2]49 OSD Windows Configuration
   ..................................... */

//=====================================
//OSD Display
#define OSD_DISPLAY_CODE            BITEK_400_4FF_OSD_LSB

// OSD0
#define OSD0_WIDTH                  10
#define OSD0_HEIGHT                 1
#define OSD0_AREA                   (OSD0_WIDTH * OSD0_HEIGHT   )

#define VP_SHOW_OSD0                OSD_DISPLAY_CODE
#define VP_SHOW_OSD0_LSB            ((VP_SHOW_OSD0 >> 0) & 0xFF)
#define VP_SHOW_OSD0_MSB            ((VP_SHOW_OSD0 >> 8) & 0x07)

#define VP_SHOW_OSD0_ROW0           (VP_SHOW_OSD0               )
#define VP_SHOW_OSD0_ROW1           (VP_SHOW_OSD0 + OSD0_WIDTH  )



// OSD1
#define OSD1_WIDTH                  0
#define OSD1_HEIGHT                 0
#define OSD1_AREA                   (OSD1_WIDTH * OSD1_HEIGHT   )

#define VP_SHOW_OSD1                (VP_SHOW_OSD0 + OSD0_AREA   )
#define VP_SHOW_OSD1_LSB            ((VP_SHOW_OSD1 >> 0) & 0xFF)
#define VP_SHOW_OSD1_MSB            ((VP_SHOW_OSD1 >> 8) & 0x07)

#define VP_SHOW_OSD1_ROW0           (VP_SHOW_OSD1                       )
#define VP_SHOW_OSD1_ROW1           (VP_SHOW_OSD1_ROW0 + OSD1_WIDTH     )
#define VP_SHOW_OSD1_ROW2           (VP_SHOW_OSD1_ROW1 + OSD1_WIDTH     )
#define VP_SHOW_OSD1_ROW3           (VP_SHOW_OSD1_ROW2 + OSD1_WIDTH     )
#define VP_SHOW_OSD1_ROW4           (VP_SHOW_OSD1_ROW3 + OSD1_WIDTH     )
#define VP_SHOW_OSD1_ROW5           (VP_SHOW_OSD1_ROW4 + OSD1_WIDTH     )
#define VP_SHOW_OSD1_ROW6           (VP_SHOW_OSD1_ROW5 + OSD1_WIDTH     )
#define VP_SHOW_OSD1_ROW7           (VP_SHOW_OSD1_ROW6 + OSD1_WIDTH     )


#define VP_SHOW_OSD1_T00            (VP_SHOW_OSD1_ROW0 + 0              )
#define VP_SHOW_OSD1_T02            (VP_SHOW_OSD1_ROW0 + 2              )
#define VP_SHOW_OSD1_T04            (VP_SHOW_OSD1_ROW0 + 4              )
#define VP_SHOW_OSD1_T06            (VP_SHOW_OSD1_ROW0 + 6              )
#define VP_SHOW_OSD1_T08            (VP_SHOW_OSD1_ROW0 + 8              )

#define VP_SHOW_OSD1_T10            (VP_SHOW_OSD1_ROW1 + 0              )
#define VP_SHOW_OSD1_T12            (VP_SHOW_OSD1_ROW1 + 2              )
#define VP_SHOW_OSD1_T14            (VP_SHOW_OSD1_ROW1 + 4              )
#define VP_SHOW_OSD1_T16            (VP_SHOW_OSD1_ROW1 + 6              )
#define VP_SHOW_OSD1_T18            (VP_SHOW_OSD1_ROW1 + 8              )

#define VP_SHOW_OSD1_T20            (VP_SHOW_OSD1_ROW2 + 0              )
#define VP_SHOW_OSD1_T23            (VP_SHOW_OSD1_ROW2 + 3              )
#define VP_SHOW_OSD1_T26            (VP_SHOW_OSD1_ROW2 + 6              )
#define VP_SHOW_OSD1_T28            (VP_SHOW_OSD1_ROW2 + 8              )

#define VP_SHOW_OSD1_T30            (VP_SHOW_OSD1_ROW3 + 0              )
#define VP_SHOW_OSD1_T33            (VP_SHOW_OSD1_ROW3 + 3              )


#define VP_SHOW_OSD1_T58            (VP_SHOW_OSD1_ROW5 + 8              )


// OSD2
#define OSD2_WIDTH                  20
#define OSD2_HEIGHT                 2
#define OSD2_AREA                   (OSD2_WIDTH * OSD2_HEIGHT)

#define VP_SHOW_OSD2                (VP_SHOW_OSD1 + OSD1_AREA   )
#define VP_SHOW_OSD2_LSB            ((VP_SHOW_OSD2 >> 0) & 0xFF)
#define VP_SHOW_OSD2_MSB            ((VP_SHOW_OSD2 >> 8) & 0x07)

#define VP_SHOW_OSD2_ROW0           (VP_SHOW_OSD2                       )
#define VP_SHOW_OSD2_ROW1           (VP_SHOW_OSD2_ROW0 + OSD2_WIDTH     )
#define VP_SHOW_OSD2_ROW2           (VP_SHOW_OSD2_ROW1 + OSD2_WIDTH     )




////////////////////////////////////////////////////////////////////////////////
#define HINT_WIDTH                  OSD0_WIDTH
#define HINT_HEIGHT                 OSD0_HEIGHT
#define HINT_AREA                   OSD0_AREA

#define VP_SHOW_HINT                (VP_SHOW_OSD0)

#define VP_SHOW_TV_CH               (VP_SHOW_OSD0_ROW0  + 4)
#define VP_SHOW_SOURCE              (VP_SHOW_OSD0_ROW0  + 7)
#define VP_SHOW_COLOR_STD           VP_SHOW_OSD0_ROW0
#define VP_SHOW_NO_SIGNAL           VP_SHOW_OSD0_ROW0


#define MENU_WIDTH                  OSD2_WIDTH
#define MENU_HEIGHT                 OSD2_HEIGHT
#define MENU_AREA                   OSD2_AREA

#define VP_SHOW_MENU                (VP_SHOW_OSD2                       )
#define VP_SHOW_CHIP                (VP_SHOW_OSD2_ROW0                  )
#define VP_SHOW_VERSION             (VP_SHOW_OSD2_ROW1               )
#define OSD2_IKINCI_SATIR           (VP_SHOW_OSD2_ROW2               )

#define VP_SHOW_TITLE               (VP_SHOW_OSD2_ROW0                  )
#define VP_SHOW_VALUE               (VP_SHOW_OSD2_ROW1 - 3              )

#define VP_SHOW_BAR_TV              (VP_SHOW_OSD2_ROW1 + 1              )
#define VP_SHOW_BAR_PC              (VP_SHOW_OSD2_ROW1                  )
#define VP_SHOW_BAR                 VP_SHOW_BAR_TV

#define VP_SHOW_RESET               (VP_SHOW_OSD2_ROW1 + 2              )
#define VP_SHOW_RESET_OFF           (VP_SHOW_RESET + 0                  )
#define VP_SHOW_RESET_ON            (VP_SHOW_RESET + 5                  )



//=====================================
//OSD Attribute
#define OSD_DISPLAY_ATTR            BITEK_300_3FF_OSD_MSB

// OSD0
#define VP_ATTR_OSD0                OSD_DISPLAY_ATTR
#define VP_ATTR_OSD0_ROW0           (VP_ATTR_OSD0                   )
#define VP_ATTR_OSD0_ROW1           (VP_ATTR_OSD0_ROW0 + OSD0_WIDTH )
#define VP_ATTR_OSD0_ROW2           (VP_ATTR_OSD0_ROW1 + OSD0_WIDTH )

// OSD1
#define VP_ATTR_OSD1                (VP_ATTR_OSD0 + OSD0_AREA       )
#define VP_ATTR_OSD1_ROW0           (VP_ATTR_OSD1                   )
#define VP_ATTR_OSD1_ROW1           (VP_ATTR_OSD1_ROW0 + OSD1_WIDTH )
#define VP_ATTR_OSD1_ROW2           (VP_ATTR_OSD1_ROW1 + OSD1_WIDTH )
#define VP_ATTR_OSD1_ROW3           (VP_ATTR_OSD1_ROW2 + OSD1_WIDTH )
#define VP_ATTR_OSD1_ROW4           (VP_ATTR_OSD1_ROW3 + OSD1_WIDTH )
#define VP_ATTR_OSD1_ROW5           (VP_ATTR_OSD1_ROW4 + OSD1_WIDTH )
#define VP_ATTR_OSD1_ROW6           (VP_ATTR_OSD1_ROW5 + OSD1_WIDTH )
#define VP_ATTR_OSD1_ROW7           (VP_ATTR_OSD1_ROW6 + OSD1_WIDTH )


// OSD2
#define VP_ATTR_OSD2                (VP_ATTR_OSD1 + OSD1_AREA       )
#define VP_ATTR_OSD2_ROW0           (VP_ATTR_OSD2                   )
#define VP_ATTR_OSD2_ROW1           (VP_ATTR_OSD2 + OSD1_WIDTH      )

////////////////////////////////////////////////////////////////////////////////
#define VP_ATTR_HINT                (VP_ATTR_OSD0)

#define VP_ATTR_MENU                (VP_ATTR_OSD1_ROW0)
#define VP_ATTR_MAINMENU            (VP_ATTR_OSD1_ROW0)
#define VP_ATTR_SUBMENU             (VP_ATTR_OSD1_ROW1)
#define VP_ATTR_PROGRESSBAR         (VP_ATTR_OSD1_ROW7)

#define VP_ATTR_VOLUME              (VP_ATTR_OSD2_ROW0)
#define VP_ATTR_VOLUME_PROGRESSBAR  (VP_ATTR_OSD2_ROW1)

/* .....................................
    OSD Palette Color Configuration
   ..................................... */
                                            //          B G R
#define OSD_BLACK                   0x000   // Black    0 0 0
#define OSD_RED                     0x007   // Red      0 0 1
#define OSD_GREEN                   0x038   // Green    0 1 0
#define OSD_YELLOW                  0x03F   // Yellow   0 1 1
#define OSD_BLUE                    0x1C0   // Blue     1 0 0
#define OSD_MAGENTA                 0x1C7   // Magenta  1 0 1
#define OSD_CYAN                    0x1F8   // Cyan     1 1 0
#define OSD_WHITE                   0x1FF   // White    1 1 1
#define OSD_GREY                    0x0DB   // Grey     1 1 1

                                            //          B G R
#define OSD_MSB_BLACK               0x00    // Black    0 0 0
#define OSD_MSB_RED                 0x00    // Red      0 0 1
#define OSD_MSB_GREEN               0x00    // Green    0 1 0
#define OSD_MSB_YELLOW              0x00    // Yellow   0 1 1
#define OSD_MSB_BLUE                0x01    // Blue     1 0 0
#define OSD_MSB_MAGENTA             0x01    // Magenta  1 0 1
#define OSD_MSB_CYAN                0x01    // Cyan     1 1 0
#define OSD_MSB_WHITE               0x01    // White    1 1 1
#define OSD_MSB_GREY                0x00    // Grey     1 1 1

                                            //          B G R
#define OSD_LSB_BLACK               0x00    // Black    0 0 0
#define OSD_LSB_RED                 0x07    // Red      0 0 1
#define OSD_LSB_GREEN               0x38    // Green    0 1 0
#define OSD_LSB_YELLOW              0x3F    // Yellow   0 1 1
#define OSD_LSB_BLUE                0xC0    // Blue     1 0 0
#define OSD_LSB_MAGENTA             0xC7    // Magenta  1 0 1
#define OSD_LSB_CYAN                0xF8    // Cyan     1 1 0
#define OSD_LSB_WHITE               0xFF    // White    1 1 1
#define OSD_LSB_GREY                0xDB    // Grey     1 1 1



/* .....................................
    [2]85 OSD Palette Attribute Configuration
   ..................................... */
// 0
#define OSD_NONE                    0x000   // None
#define OSD_FRINGE                  0x800   // Fringe
#define OSD_FG_BLINK                0x400   // Foreground Blink
#define OSD_FG_FADE                 0x200   // Foreground Fade
// 1
#define OSD_BG_TRANSPARENT          0x800   // Background Transparent
#define OSD_BG_BLINK                0x400   // Background Blink
#define OSD_BG_FADE                 0x200   // Background Fade

// 0
#define OSD_MSB_NONE                0x00    // None
#define OSD_MSB_FRINGE              0x08    // Fringe
#define OSD_MSB_FG_BLINK            0x04    // Foreground Blink
#define OSD_MSB_FG_FADE             0x02    // Foreground Fade
// 1
#define OSD_MSB_BG_TRANSPARENT      0x08    // Background Transparent
#define OSD_MSB_BG_BLINK            0x04    // Background Blink
#define OSD_MSB_BG_FADE             0x02    // Background Fade


/*
; ------------------------------------------------------------------------------
;   OSD Palette: MSB (0x300 - 0x3FF), LSB (0x400 - 0x4FF)
;   OSD Palette 0 (0x7C0 - 0x7DF)
;   OSD Palette 1 (0x7E0 - 0x7FF)
; ------------------------------------------------------------------------------
*/

/* .....................................
    OSD Palette RAM
   ..................................... */
// Palette 0 : OSD1_COLOR_NORMAL (FG: Green (G), BG: Black ())
#define OSD0_NM_MSB0                (                   OSD_MSB_YELLOW       )
#define OSD0_NM_LSB0                (OSD_LSB_WHITE                          )
#define OSD0_NM_MSB1                ( OSD_MSB_BLUE       )
#define OSD0_NM_LSB1                (OSD_LSB_BLUE                          )

// Palette 1 : OSD1_COLOR_NORMAL (FG: White(R+G+B), BG: Black ())
#define OSD1_NM_MSB0                (                   OSD_MSB_WHITE       )
#define OSD1_NM_LSB0                (OSD_LSB_WHITE                          )
#define OSD1_NM_MSB1                (OSD_MSB_BG_FADE |  OSD_MSB_BLACK       )
#define OSD1_NM_LSB1                (OSD_LSB_BLACK                          )

// Palette 2 : OSD2_COLOR_NORMAL (FG: Green (G), BG: Black ())
#define OSD2_NM_MSB0                (                   OSD_MSB_YELLOW       )
#define OSD2_NM_LSB0                (OSD_LSB_YELLOW                          )
#define OSD2_NM_MSB1                (OSD_MSB_BLUE	| OSD_MSB_BG_TRANSPARENT )
#define OSD2_NM_LSB1                (OSD_LSB_YELLOW                          )

// Palette 3 : OSD2_COLOR_HIGHLIGHT   (FG: Red  (R), BG: Black ())
#define OSD2_HL_MSB0                (                   OSD_MSB_RED         )
#define OSD2_HL_LSB0                (OSD_LSB_RED                            )
#define OSD2_HL_MSB1                (OSD_MSB_BG_FADE |  OSD_MSB_BLACK       )
#define OSD2_HL_LSB1                (OSD_LSB_BLACK                          )




/* .....................................
    OSD Attribute Configuration
   ..................................... */
#define OSD0_NM_ATTR                0
#define OSD1_NM_ATTR                1
#define OSD2_NM_ATTR                2
#define OSD2_HL_ATTR                3



/* ::::::::::::::::::::::::::::::::::::
    [1]125 OSD Fixed Font
   :::::::::::::::::::::::::::::::::::: */
#define FONT_00_DASH_0              0x00
#define FONT_01_DASH_1              0x01
#define FONT_02_DASH_2              0x02
#define FONT_03_DASH_3              0x03

#define FONT_0E_MUTE_OFF_SAVE       0x0E
#define FONT_0F_MUTE_ON_SAVE        0x0F

#define FONT_17_CONTRAST            0x17
#define FONT_18_SATURATION          0x18
#define FONT_19_HUE                 0x19
#define FONT_1B_BRIGHTNESS          0x1B

#define FONT_1C_LEFT_ARROW          0x1C
#define FONT_1D_RIGHT_ARROW         0x1D
#define FONT_20_BLANK               0x20

#define FONT_2F_SLASH               0x2F
#define FONT_30_DIGIT_0             0x30
#define FONT_31_DIGIT_1             0x31
#define FONT_39_DIGIT_9             0x39
#define FONT_3A                     0x3A
#define FONT_3C_CHECK_OFF           0x3C
#define FONT_2C_CHECK_ON            0x2C

#define FONT_00_TRACK_0             0x00
#define FONT_01_TRACK_1             0x01
#define FONT_06_TRACK_2             0x06
#define FONT_07_TRACK_3             0x07

#define FONT_5B_BAR_LEFT            0x5B
#define FONT_10_BAR_0               0x10
#define FONT_11_BAR_1               0x11
#define FONT_12_BAR_2               0x12
#define FONT_13_BAR_3               0x13
#define FONT_14_BAR_4               0x14
#define FONT_15_BAR_5               0x15
#define FONT_16_BAR_6               0x16
#define FONT_5D_BAR_RIGHT           0x5D

#define FONT_4E_N                   0x50
#define FONT_50_P                   0x50

#define FONT_DUMMY                  0x20



#define OSD_AUTO_VANISH_SLOT        4
#define OSD_AUTO_VANISH             (OSD_AUTO_VANISH_SLOT + (2000 / MS_PER_TICK))


#endif
